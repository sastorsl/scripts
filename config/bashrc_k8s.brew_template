#
# kubernetes / k8s prompt
#
if [ -f /home/linuxbrew/.linuxbrew/opt/kube-ps1/share/kube-ps1.sh ]
then
    source /home/linuxbrew/.linuxbrew/opt/kube-ps1/share/kube-ps1.sh
    # Add "kube_ps1" to the system generated PS1
    case "$PS1" in
        *kube_ps1*) : ;;
        *)  export oPS1=$PS1
            export PS1='$(kube_ps1)'$PS1
            ;;
    esac
fi

#
# https://krew.sigs.k8s.io/
#
case "$PATH" in
    *.krew/bin*) : ;;
    *) export PATH=$PATH:~/.krew/bin ;;
esac

#
# Short handle for kubectl, etc
# NB! Remeber to add "k" to ~/.bash_completion.d/kubectl*
#
alias k='kubectl'
alias ke='kubens'
alias kx='kubectx'
alias klogs='kubectl logs --timestamps=true'
alias cert-manager='kubectl cert-manager'

function kresources () {
  # Get resource requests and limits for all containers in all pods in a namespace
  # Usage: kresources [<project_name>]
  # Props to steffenlongva/zsh-stuff
  local project_name=$1
  test -n "${project_name}" && local namespace="--namespace=${project_name}" || local namespace=""
  which oc >/dev/null && local cmd=oc || local cmd=kubectl
  ${cmd} get pods $namespace -o custom-columns="STATE:.status.phase,NAME:.metadata.name,CPU_REQ:.spec.containers[*].resources.requests.cpu,CPU_LIMIT:.spec.containers[*].resources.limits.cpu,MEM_REQ:.spec.containers[*].resources.requests.memory,MEM_LIMIT:.spec.containers[*].resources.limits.memory"
}

if [ -f $HOME/.openshift_domain ]
then
    if [ -f $HOME/.openshift_user ]
    then
        for i in os-cts os-dts-global os-global os-pci-global os-pci-prod os-pci-restricted os-prod os-restricted os-sandbox
        do
            unalias oc-${i} 2>/dev/null
            source /dev/stdin <<EOF
            function oc-$i () {
              oc \$@ --context=default/api-${i}-$(cat $HOME/.openshift_domain | sed 's/\./-/g'):6443/$(cat $HOME/.openshift_user)
            }
EOF
            if [[ $(type -t compopt) = "builtin" ]]; then
                complete -o default -F __start_oc oc-${i}
            else
                complete -o default -o nospace -F __start_oc oc-${i}
            fi
        done
    else
        echo "Add your email-address to $HOME/.openshift_user to get oc-<env> funtions, e.g. 'user.name@organization.com'"
    fi
else
    echo "Add the _domain_ part to $HOME/.openshift_domain to get oc-<env> funtions, e.g. 'hostname.com'"
fi

# Setup bash completion also for my aliases
if [[ $(type -t compopt) = "builtin" ]]; then
    complete -o default -F __start_kubectl k
else
    complete -o default -o nospace -F __start_kubectl k
fi
complete -F _kube_contexts kx kctx
complete -F _kube_namespaces ke kns
